/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI;
import Model.*;
import com.oracle.webservices.internal.api.databinding.DatabindingModeFeature;
import javax.swing.JOptionPane;
/**
 *
 * @author xyh10
 */
public class CreatePanel extends javax.swing.JPanel {

    /**
     * Creates new form CreatePanel
     */
    
    Application application;
    public CreatePanel() {
        initComponents();
    }

    public CreatePanel(Application application) {
        initComponents();
        this.application = application;
    }
    
    public boolean validateID(){
        String str = fieldObservationID.getText();
        
        if(str.trim().isEmpty()){
            JOptionPane.showMessageDialog(null,"Please enter the ID!" );
            return false;
        }else if(!str.matches("[0-9]*")){
            JOptionPane.showMessageDialog(null,"Please enter a positive ID(consists of only digits)!" );
            return false;
        }else if(Integer.parseInt(str) < 0){
            JOptionPane.showMessageDialog(null,"ID should larger or equals than 0!" );
            return false;
        }   
        return true;
    }
    
    public boolean validateTemperature(){
        String str = fieldTemperature.getText();
        
        if(str.trim().isEmpty()){
            JOptionPane.showMessageDialog(null,"Please enter the Temperature!" );
            return false;
        }else if(!str.matches("[0-9]*(.[0-9]*)?")){
            JOptionPane.showMessageDialog(null,"Please enter a valid number for Temperature!" );
            return false;
        }else if(Double.parseDouble(str) <= 0){
            JOptionPane.showMessageDialog(null,"Temperature should larger than 0!!" );
            return false;
        }   
        return true;
    }
    
    public boolean validateBloodPressure(){
        String str = fieldBloodPressure.getText();
        
        if(str.trim().isEmpty()){
            JOptionPane.showMessageDialog(null,"Please enter the Blood Pressure!" );
            return false;
        }else if(!str.matches("[0-9]*(.[0-9]*)?")){
            JOptionPane.showMessageDialog(null,"Please enter a valid number for  Blood Pressure!" );
            return false;
        }else if(Double.parseDouble(str) <= 0){
            JOptionPane.showMessageDialog(null," Blood Pressure should larger than 0!!" );
            return false;
        }   
        return true;
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fieldObservationID = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        fieldTemperature = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        addObservationBtn = new javax.swing.JButton();
        fieldBloodPressure = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(204, 204, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        fieldObservationID.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                fieldObservationIDFocusLost(evt);
            }
        });
        fieldObservationID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldObservationIDActionPerformed(evt);
            }
        });
        add(fieldObservationID, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 140, 110, 30));

        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Observation Id");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 140, -1, -1));
        add(fieldTemperature, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 210, 110, 30));

        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Temperature");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 210, -1, -1));

        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("Blood Pressure");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 290, -1, -1));

        addObservationBtn.setText("Add observation");
        addObservationBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addObservationBtnActionPerformed(evt);
            }
        });
        add(addObservationBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 370, -1, -1));
        add(fieldBloodPressure, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 290, 110, 30));

        jLabel4.setFont(new java.awt.Font("Serif", 1, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("Create an observation");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 50, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void addObservationBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addObservationBtnActionPerformed
        // TODO add your handling code here:
        String strId =fieldObservationID.getText();
        String strBloodPressure = fieldBloodPressure.getText();
        String strTemperature = fieldTemperature.getText();
        
        if(!validateID()) return ;
        if(!application.getHistory().checkObservationIDUnique(Integer.parseInt(strId))){
            JOptionPane.showMessageDialog(null, "ID existed!");
            return ;
        }
        
        
        if(!validateTemperature()) return ;
        if(!validateBloodPressure()) return ;
        
        
        application.getHistory().createObservation(Integer.parseInt(strId), Double.parseDouble(strBloodPressure), Double.parseDouble(strTemperature));
        JOptionPane.showMessageDialog(null, "Added observation successfully!");
    }//GEN-LAST:event_addObservationBtnActionPerformed

    private void fieldObservationIDFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_fieldObservationIDFocusLost
        // TODO add your handling code here:
        String strID = fieldObservationID.getText();
        
        if(strID.trim().isEmpty()){
             JOptionPane.showMessageDialog(null, "Please input your ID!");
            return;
            
        }else if(!strID.matches("[0-9]*")){
            JOptionPane.showMessageDialog(null, "ID shoud be digits!");
            return;
        }else{
            int id = Integer.parseInt(strID);
            if(!application.getHistory().checkObservationIDUnique(id)){
                
                JOptionPane.showMessageDialog(null, "ID existed!");
                fieldObservationID.setText("");
            }
        }
    }//GEN-LAST:event_fieldObservationIDFocusLost

    private void fieldObservationIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldObservationIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldObservationIDActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addObservationBtn;
    private javax.swing.JTextField fieldBloodPressure;
    private javax.swing.JTextField fieldObservationID;
    private javax.swing.JTextField fieldTemperature;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    // End of variables declaration//GEN-END:variables
}
